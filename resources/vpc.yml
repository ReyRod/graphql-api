Parameters:
  VPCCidrBlock:
    Type: 'String'
    Default: '10.192.0.0/16'
  PublicSubnet1CidrBlock:
    Type: 'String'
    Default: '10.192.10.0/24'
  PublicSubnet2CidrBlock:
    Type: 'String'
    Default: '10.192.11.0/24'
  PrivateSubnet1CidrBlock:
    Type: 'String'
    Default: '10.192.20.0/24'
  PrivateSubnet2CidrBlock:
    Type: 'String'
    Default: '10.192.21.0/24'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock:
        Ref: 'VPCCidrBlock'
      EnableDnsSupport: true
      EnableDnsHostnames: true
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId:
        Ref: 'InternetGateway'
      VpcId:
        Ref: 'VPC'
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: 'VPC'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      CidrBlock:
        Ref: 'PublicSubnet1CidrBlock'
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: 'VPC'
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      CidrBlock:
        Ref: 'PublicSubnet2CidrBlock'
      MapPublicIpOnLaunch: true
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: 'VPC'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      CidrBlock:
        Ref: 'PrivateSubnet1CidrBlock'
      MapPublicIpOnLaunch: false
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: 'VPC'
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      CidrBlock:
        Ref: 'PrivateSubnet2CidrBlock'
      MapPublicIpOnLaunch: false
  NatGateway1EIP:
    Type: 'AWS::EC2::EIP'
    DependsOn: 'InternetGatewayAttachment'
    Properties:
      Domain: 'vpc'
  NatGateway2EIP:
    Type: 'AWS::EC2::EIP'
    DependsOn: 'InternetGatewayAttachment'
    Properties:
      Domain: 'vpc'
  NatGateway1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        Fn::GetAtt: ['NatGateway1EIP', 'AllocationId']
      SubnetId:
        Ref: 'PublicSubnet1'
  NatGateway2:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        Fn::GetAtt: ['NatGateway2EIP', 'AllocationId']
      SubnetId:
        Ref: 'PublicSubnet2'
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: 'VPC'
  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: ['InternetGatewayAttachment']
    Properties:
      RouteTableId:
        Ref: 'PublicRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: 'InternetGateway'
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: 'PublicRouteTable'
      SubnetId:
        Ref: 'PublicSubnet1'
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: 'PublicRouteTable'
      SubnetId:
        Ref: 'PublicSubnet2'
  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: 'VPC'
  DefaultPrivateRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: 'PrivateRouteTable1'
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId:
        Ref: 'NatGateway1'
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: 'PrivateRouteTable1'
      SubnetId:
        Ref: 'PrivateSubnet1'
  PrivateRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: 'VPC'
  DefaultPrivateRoute2:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: 'PrivateRouteTable2'
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId:
        Ref: 'NatGateway2'
  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: 'PrivateRouteTable2'
      SubnetId:
        Ref: 'PrivateSubnet2'